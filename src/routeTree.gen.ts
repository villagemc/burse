/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WithdrawImport } from './routes/withdraw'
import { Route as ReferImport } from './routes/refer'
import { Route as RatingImport } from './routes/rating'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const WithdrawRoute = WithdrawImport.update({
  path: '/withdraw',
  getParentRoute: () => rootRoute,
} as any)

const ReferRoute = ReferImport.update({
  path: '/refer',
  getParentRoute: () => rootRoute,
} as any)

const RatingRoute = RatingImport.update({
  path: '/rating',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/rating': {
      id: '/rating'
      path: '/rating'
      fullPath: '/rating'
      preLoaderRoute: typeof RatingImport
      parentRoute: typeof rootRoute
    }
    '/refer': {
      id: '/refer'
      path: '/refer'
      fullPath: '/refer'
      preLoaderRoute: typeof ReferImport
      parentRoute: typeof rootRoute
    }
    '/withdraw': {
      id: '/withdraw'
      path: '/withdraw'
      fullPath: '/withdraw'
      preLoaderRoute: typeof WithdrawImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  RatingRoute,
  ReferRoute,
  WithdrawRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/rating",
        "/refer",
        "/withdraw"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/rating": {
      "filePath": "rating.tsx"
    },
    "/refer": {
      "filePath": "refer.tsx"
    },
    "/withdraw": {
      "filePath": "withdraw.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
